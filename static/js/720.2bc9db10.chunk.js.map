{"version":3,"file":"static/js/720.2bc9db10.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/filter/filterSelectors.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/filterSelectors';\n\nexport const selectContacts = state => state.allContacts.contacts;\nexport const selectIsLoading = state => state.allContacts.isLoading;\nexport const selectError = state => state.allContacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget.elements;\n    const name = form.name.value;\n    const number = form.number.value;\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      evt.currentTarget.reset();\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          ></input>\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          ></input>\n        </label>\n        <button className={css.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"list-item-wrap\":\"ContactList_list-item-wrap__xDrgp\",\"btn-delete\":\"ContactList_btn-delete__bT29K\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { selectVisibleContacts } from 'redux/contacts/contactsSelectors';\nimport { MdClose } from 'react-icons/md';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id} className={css.list}>\n          <div className={css['list-item-wrap']}>\n            <p className={css['list-item-name']}>{name}</p>\n            <p className={css['list-item-phone']}>{number}</p>\n          </div>\n          <button\n            className={css['btn-delete']}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            <MdClose size={24} />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"find\":\"Filter_find__S9I33\",\"find-text\":\"Filter_find-text__epYr+\"};","// import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterQuery } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { selectIsLoading, selectError } from 'redux/contacts/contactsSelectors';\n\nexport const Filter = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onChange = evt => {\n    dispatch(filterQuery(evt.target.value));\n  };\n  return (\n    <div>\n    <h1>Contacts </h1>\n    <label className={css.find}>\n      <div className={css['find-text']}> Find contacts by name</div>\n      <input type=\"text\" value={filter.payload} onChange={onChange} />\n      </label>\n      {isLoading && !error && <b>Request in progress...</b>}\n      {error && <b className={css.error}>Something wrong... {error}</b>}\n      </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\nimport { useEffect } from 'react';\nimport { Filter } from 'components//Filter/Filter';\nimport { authSelectors } from 'redux/auth/authSelectors';\n\nexport default function Contacts () {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(authSelectors.selectIsLoggedIn);\n\n  useEffect(() => {\n    if (isLoggedIn) dispatch(fetchContacts());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n"],"names":["selectFilter","state","filter","selectContacts","allContacts","contacts","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","item","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","onSubmit","evt","preventDefault","form","currentTarget","elements","value","number","find","contact","alert","reset","addContact","className","css","type","pattern","title","required","ContactList","visibleContacts","map","id","onClick","deleteContact","size","Filter","payload","onChange","filterQuery","target","Contacts","isLoggedIn","authSelectors","useEffect","fetchContacts"],"sourceRoot":""}