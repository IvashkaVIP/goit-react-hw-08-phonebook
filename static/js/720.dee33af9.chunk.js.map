{"version":3,"file":"static/js/720.dee33af9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/filter/filterSelectors.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/filterSelectors';\n\nexport const selectContacts = state => state.allContacts.contacts;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget.elements;\n    const name = form.name.value;\n    const number = form.number.value;\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      evt.currentTarget.reset();\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <div className={css.container}>\n      <h1>Phonebook</h1>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          ></input>\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          ></input>\n        </label>\n        <button className={css.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"list-item-wrap\":\"ContactList_list-item-wrap__xDrgp\",\"btn-delete\":\"ContactList_btn-delete__bT29K\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { selectVisibleContacts } from 'redux/contacts/contactsSelectors';\nimport { MdClose } from 'react-icons/md';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id} className={css.list}>\n          <div className={css['list-item-wrap']}>\n            <p className={css['list-item-name']}>{name}</p>\n            <p className={css['list-item-phone']}>{number}</p>\n          </div>\n          <button\n            className={css['btn-delete']}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            <MdClose size={24} />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"find\":\"Filter_find__S9I33\",\"find-text\":\"Filter_find-text__epYr+\",\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterQuery } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filterSelectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onChange = evt => {\n    dispatch(filterQuery(evt.target.value));\n  };\n  return (\n    <div className={css.container}>\n      <h1>Contacts </h1>\n      <label className={css.find}>\n        <div className={css['find-text']}> Find contacts by name</div>\n        <input className={css.input} type=\"text\" value={filter.payload} onChange={onChange} />\n      </label>\n     </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\nimport { useEffect } from 'react';\nimport { Filter } from 'components//Filter/Filter';\nimport { authSelectors } from 'redux/auth/authSelectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(authSelectors.selectIsLoggedIn);\n\n  useEffect(() => {\n    if (isLoggedIn) dispatch(fetchContacts());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectFilter","state","filter","selectContacts","allContacts","contacts","selectVisibleContacts","createSelector","item","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","className","css","onSubmit","evt","preventDefault","form","currentTarget","elements","value","number","find","contact","alert","reset","addContact","type","pattern","title","required","ContactList","visibleContacts","map","id","onClick","deleteContact","size","Filter","payload","onChange","filterQuery","target","Contacts","isLoggedIn","authSelectors","useEffect","fetchContacts"],"sourceRoot":""}